name: React CI Pipeline
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
  
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Unit Tests
        run: npm test -- --coverage
        env:
          CI: true
  
  security_scan:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: JFrog Xray Security Scan
        uses: jfrog/jfrog-setup-cli@v3
        with:
          version: latest
      - name: Run Xray Scan
        run: jfrog xr scan --watches "default-watch"
      - name: BlackDuck Security Scan
        uses: synopsys-sig/synopsys-detect@v1
        with:
          detect.project.name: "my-react-app"
          detect.project.version: "latest"
          detect.source.path: "."
          detect.tools: "SIGNATURE_SCAN"
  
  code_quality:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Linter
        run: npm run lint
      - name: SonarQube Analysis
        run: echo "Running SonarQube analysis..."
  
  build:
    runs-on: ubuntu-latest
    needs: [test, security_scan, code_quality]
    steps:
      - name: Build Docker Image
        run: docker build -t my-react-app:latest .
  
  push_to_registry:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Tag and Push Docker Image
        run: |
          docker tag my-react-app:latest my-dockerhub-user/my-react-app:latest
          docker push my-dockerhub-user/my-react-app:latest
